#!/usr/bin/env bash
# check_checksum_flags.sh
# Usage:
#   ./check_checksum_flags.sh -f <file> [-t sha256|sha1|md5] [-m | -l]
# Automatically quarantines mismatched files.

FILE=""
CHECKSUM=""
CHECKSUM_TYPE="sha256"
FORCE_OS=""

# Config
QUARANTINE_DIR="$HOME/.local/quarantine"
LOGFILE="$HOME/.local/share/checksum_quarantine.log"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# helpers
err() { printf "${RED}ERROR:${NC} %s\n" "$*" >&2; }
info() { printf "%s\n" "$*"; }
warn() { printf "${YELLOW}WARNING:${NC} %s\n" "$*"; }
success() { printf "${GREEN}%s${NC}\n" "$*"; }

# --- parse flags ---
while [[ $# -gt 0 ]]; do
  case "$1" in
    -f|--file)
      FILE="$2"
      shift 2
      ;;
    -c|--checksum)
      CHECKSUM="$2"
      shift 2
      ;;
    -t|--type)
      CHECKSUM_TYPE="$2"
      shift 2
      ;;
    -m|--mac)
      FORCE_OS="Darwin"
      shift
      ;;
    -l|--linux)
      FORCE_OS="Linux"
      shift
      ;;
    -*)
      err "Unknown option: $1"
      exit 1
      ;;
    *)
      # unknown positional arg
      shift
      ;;
  esac
done

# sanity checks
if [ -z "$FILE" ] || [ -z "$CHECKSUM" ]; then
  err "Usage: $0 -f <file> -c <checksum> [-t sha256|sha1|md5] [-m|-l]"
  exit 2
fi

if [ ! -e "$FILE" ]; then
  err "File not found: $FILE"
  exit 3
fi

if [ -z "$FORCE_OS" ]; then
  OS=$(uname -s)
else
  OS="$FORCE_OS"
fi

# --- choose checksum command ---
case "$CHECKSUM_TYPE" in
  sha256)
    if command -v shasum >/dev/null 2>&1; then
      CMD="shasum -a 256"
    elif command -v sha256sum >/dev/null 2>&1; then
      CMD="sha256sum"
    else
      err "No sha256 utility found"
      exit 5
    fi
    ;;
  sha1)
    if command -v shasum >/dev/null 2>&1; then
      CMD="shasum -a 1"
    elif command -v sha1sum >/dev/null 2>&1; then
      CMD="sha1sum"
    else
      err "No sha1 utility found"
      exit 5
    fi
    ;;
  md5)
    if [ "$OS" = "Darwin" ]; then
      CMD="md5 -r"
    else
      if command -v md5sum >/dev/null 2>&1; then
        CMD="md5sum"
      elif command -v md5 >/dev/null 2>&1; then
        CMD="md5 -r"
      else
        err "No md5 utility found"
        exit 5
      fi
    fi
    ;;
  *)
    err "Unsupported checksum type: $CHECKSUM_TYPE"
    exit 6
    ;;
esac

# --- calculate checksum ---
CALCULATED=$($CMD -- "$FILE" 2>/dev/null | awk '{print $1}')

# --- match check ---
if [ "$CALCULATED" = "$CHECKSUM" ]; then
  success "✅ $CHECKSUM_TYPE checksum matches: $CALCULATED"
  echo "$(date -u +"%Y%m%dT%H%M%SZ") KEEP    $FILE [$CHECKSUM_TYPE] expected:$CHECKSUM found:$CALCULATED" >> "$LOGFILE"
  exit 0
fi

# mismatch
warn "❌ $CHECKSUM_TYPE checksum does NOT match!"
warn "Expected: $CHECKSUM"
warn "Found:    $CALCULATED"

# Automatic quarantine
mkdir -p -- "$QUARANTINE_DIR" || { err "Could not create $QUARANTINE_DIR"; exit 7; }
timestamp=$(date -u +"%Y%m%dT%H%M%SZ")
base=$(basename -- "$FILE")
target="$QUARANTINE_DIR/${base}_${CHECKSUM_TYPE}_${timestamp}"

mv -- "$FILE" "$target" || { err "Failed to move file to quarantine"; exit 8; }

info "File quarantined to: $target"
echo "$(date -u +"%Y%m%dT%H%M%SZ") QUARANTINE $FILE -> $target [$CHECKSUM_TYPE] expected:$CHECKSUM found:$CALCULATED" >> "$LOGFILE"

exit 0